<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="D:/algoViva/Ex_Files_SQL_EssT/Ex_Files_SQL_EssT/Exercise Files/WSDA_Music.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="166"/><column_width id="3" width="5253"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,5:mainTrack"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Album" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="84"/><column index="2" value="280"/><column index="3" value="76"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Customer" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="111"/><column index="2" value="97"/><column index="3" value="105"/><column index="4" value="300"/><column index="5" value="300"/><column index="6" value="167"/><column index="7" value="55"/><column index="8" value="124"/><column index="9" value="106"/><column index="10" value="165"/><column index="11" value="157"/><column index="12" value="233"/><column index="13" value="131"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Playlist" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="91"/><column index="2" value="199"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Track" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="75"/><column index="2" value="187"/><column index="3" value="84"/><column index="4" value="121"/><column index="5" value="80"/><column index="6" value="244"/><column index="7" value="115"/><column index="8" value="97"/><column index="9" value="88"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">--THIS IS A COMMENT

/*
	Created By: Vihanga Supasan
	Create Date: 04/07/2024
	Description: This is the structure 
	of a basic QUERY
	
*/







</sql><sql name="SQL 2">/*
	CREATED BY: VIHANGA SUPASAN
	CREATED DAY: 07/04/2024
	DESCRIPTION: THIS QUERY DISPLAYS ALL CUSTOMERS FIRST,
	LAST NAMES AND EMAIL ADDRESSES
	
*/
SELECT 
	FirstName AS [Customer First Name], --this is alias
	LastName AS &quot;Customer Last Name&quot;,
	Email AS &quot;Customer Email Address&quot;
FROM
	Customer
ORDER BY --this is for sorting
	FirstName ,
	LastName DESC --DESC FOR sorting in descending ORDER
	
	--ASC for asending order 
LIMIT 10 -- it limits to 10 ROWS


	
	
	

</sql><sql name="SQL 3">SELECT  
	t.Name  AS &quot;Track Name&quot;, 
	t.UnitPrice AS &quot;Price&quot;
FROM 
	Track AS t
ORDER BY 
	t.Name
LIMIT 20
</sql><sql name="SQL 4">/*
	CREATED BY: VIHANGA SUPASAN
	CREATED DATE: 04/07/2024
	DESCRIPTION: CUSTOMERS WHO
	PURCHASED TWO SONGS AT $0.99 EACH
*/

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM
	Invoice
WHERE 
	total==1.98
ORDER BY
	InvoiceDate

</sql><sql name="SQL 5">/*
	CREATED BY: VIHANGA SUPASAN
	CREATED DATE: 04/07/2024
	DESCRIPTION: HOW MANY INVOICES 
	EXIST BETWEEN $1.98 AND $5.00
	
*/

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM
	Invoice
WHERE 
	total BETWEEN 1.98 AND 5.00
ORDER BY
	total

</sql><sql name="SQL 6">/*
	CREATED BY: VIHANGA SUPASAN
	CREATED DATE: 04/07/2024
	DESCRIPTION: HOW MANY INVOICES 
	DO WE HAVE THAT ARE EXACTLY $1.98 
	OR $3.96
	
	
*/

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM
	Invoice
WHERE 
	total IN (1.98,3.96)
ORDER BY
	total</sql><sql name="SQL 7">/*
	CREATED BY: VIHANGA SUPASAN
	CREATED DATE: 04/07/2024
	DESCRIPTION:How many invoices were billed
	in Brussels?
	
	
*/

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM
	Invoice
WHERE 
	BillingCity='Brussels' 
ORDER BY
	InvoiceDate</sql><sql name="SQL 8">/*
	CREATED BY: VIHANGA SUPASAN
	CREATED DATE: 04/07/2024
	DESCRIPTION:How many invoices were billed
	billed to Brussels, Orlando or Paris?
	
	
	
*/

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM
	Invoice
WHERE 
	BillingCity IN ('Brussels','Orlando','Paris')
ORDER BY
	InvoiceDate</sql><sql name="SQL 9">/*
	CREATED BY: VIHANGA SUPASAN
	CREATED DATE: 04/07/2024
	DESCRIPTION:How many invoices were billed
	billed in cities that starts with B?
	
	
*/

-- % is refered to as wild character
-- I dont care what comes next


SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM
	Invoice
WHERE 
	BillingCity LIKE 'B%'
ORDER BY
	InvoiceDate</sql><sql name="SQL 10">/*
	CREATED BY: VIHANGA SUPASAN
	CREATED DATE: 04/07/2024
	DESCRIPTION:How many invoices were billed
	billed in cities that have a B anywhere
	in its name?
	
	
	
*/

-- % is refered to as wild character
-- I dont care what comes next


SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM
	Invoice
WHERE 
	BillingCity LIKE '%B%'
ORDER BY
	InvoiceDate</sql><sql name="SQL 11">/*
	CREATED BY: VIHANGA SUPASAN
	CREATED DATE: 04/07/2024
	DESCRIPTION:How many invoices 
	were billed on May 22,2010	
*/

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM
	Invoice
WHERE 
	DATE(InvoiceDate) = '2010-05-22'
	--WE DONT HAVE TO INCLUDE THE TIME POTION
	
ORDER BY
	InvoiceDate</sql><sql name="SQL 12">/*
	CREATED BY: VIHANGA SUPASAN
	CREATED DATE: 04/07/2024
	DESCRIPTION:How many invoices 
	were billed after May 22,2010 AND
	have a total of less than 3:00?
*/

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM
	Invoice
WHERE 
	DATE(InvoiceDate) &gt; '2010-05-22' AND total&lt;3.00
	--WE DONT HAVE TO INCLUDE THE TIME POTION
	
ORDER BY
	InvoiceDate</sql><sql name="SQL 13">/*
	CREATED BY: VIHANGA SUPASAN
	CREATED DATE: 04/07/2024
	DESCRIPTION:get all invoices 
	who's billing city is starts WITH
	p or starts with D
	
*/

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM
	Invoice
WHERE 
	BillingCity like 'P%' OR BillingCity
	like 'D%'
ORDER BY
	InvoiceDate</sql><sql name="SQL 14">/*
	CREATED BY: VIHANGA SUPASAN
	CREATED DATE: 04/07/2024
	DESCRIPTION:get all invoices 
	that are greater than
	1.98 who's billing city is starts WITH
	p or starts with D
	
*/

--PEMDAS- Parentheses, Exponents, Multiplication/Division addition substraction

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM
	Invoice
WHERE 
	total&gt;1.98 AND( BillingCity like 'P%' OR BillingCity
	like 'D%')
ORDER BY
	total</sql><sql name="SQL 15">/*
	CREATED BY: VIHANGA SUPASAN
	CREATED DATE: 04/07/2024
	DESCRIPTION:
	WSDA Music sales goal
	Sales Categories
	Baseline Purchase-between $0.99 and $1.99
	Low Purchase- between $2.00 and $6.99
	Target Purchase -Between $7.00 and $15.00
	Top Performer- Above $15.00
*/

--PEMDAS- Parentheses, Exponents, Multiplication/Division addition substraction

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total,
	CASE 
	WHEN total&lt;2.00 THEN 'BaseLine Purchase'
	WHEN total BETWEEN 2.00 AND 6.99 THEN 'Low Purchase'
	WHEN total BETWEEN 7.00 AND 15.00 THEN 'Target Purchase'
	ELSE 'Top Performer'
	END AS 'PurchaseType'
	
	
	
FROM
	Invoice
WHERE 
	PurchaseType= 'Top Performer'
ORDER BY
	total</sql><sql name="SQL 16">SELECT Name as &quot;Track Name&quot;, UnitPrice as &quot;Price&quot;, Composer as &quot;Composer&quot;,
CASE 
WHEN UnitPrice &lt; 1.00 THEN &quot;Budget&quot;
WHEN UnitPrice BETWEEN 1.00 AND 1.49 THEN &quot;Regular&quot;
WHEN UnitPrice BETWEEN 1.50 AND 1.99 THEN &quot;Premium&quot;
ELSE &quot;Exclusive&quot;
END AS &quot;PriceCategory&quot;
FROM  Track
ORDER BY
    UnitPrice

</sql><sql name="SQL 17">/*
	CREATED BY: VIHANGA SUPASAN
	CREATED DATE: 04/07/2024
	DESCRIPTION:
	JOIN
*/
SELECT 
	*
FROM 
	Invoice
INNER JOIN
	Customer
ON
	Invoice.CustomerId=Customer.CustomerId
</sql><sql name="SQL 18">/*
	CREATED BY: VIHANGA SUPASAN
	CREATED DATE: 04/07/2024
	DESCRIPTION:
	JOIN
*/
SELECT 
	FirstName,LastName,InvoiceId
FROM 
	Invoice
INNER JOIN
	Customer
ON
	Invoice.CustomerId=Customer.CustomerId
</sql><current_tab id="17"/></tab_sql></sqlb_project>
